{% comment %} 
  Quote Button Block - Hiển thị nút quote dựa trên metafield configuration
  Metafield: shop.metafields.quote_snap.configuration hoặc product.metafields.quote_snap.configuration
{% endcomment %}

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Chỉ chạy trên trang product
  if (!window.location.pathname.includes('/products/')) return;
  
  // Lấy metafield configuration từ shop hoặc product
  let quoteConfig = null;
  
  {% if shop.metafields.quote_snap.configuration %}
    quoteConfig = {{ shop.metafields.quote_snap.configuration | json }};
  {% elsif product.metafields.quote_snap.configuration %}
    quoteConfig = {{ product.metafields.quote_snap.configuration | json }};
  {% endif %}
  
  // Nếu không có config hoặc không active thì không hiển thị
  if (!quoteConfig || !quoteConfig.isActive) {
    return;
  }
  
  // Kiểm tra displayRule
  if (quoteConfig.displayRule === 'specific' && quoteConfig.specificProducts) {
    const currentProductId = {{ product.id | json }};
    if (!quoteConfig.specificProducts.includes(currentProductId)) {
      return;
    }
  }
  
  // Chuyển đổi HSB sang RGB
  function hsbToRgb(h, s, b) {
    h = h / 360;
    const c = b * s;
    const x = c * (1 - Math.abs((h * 6) % 2 - 1));
    const m = b - c;
    
    let r, g, bl;
    if (h < 1/6) {
      r = c; g = x; bl = 0;
    } else if (h < 2/6) {
      r = x; g = c; bl = 0;
    } else if (h < 3/6) {
      r = 0; g = c; bl = x;
    } else if (h < 4/6) {
      r = 0; g = x; bl = c;
    } else if (h < 5/6) {
      r = x; g = 0; bl = c;
    } else {
      r = c; g = 0; bl = x;
    }
    
    return {
      r: Math.round((r + m) * 255),
      g: Math.round((g + m) * 255),
      b: Math.round((bl + m) * 255)
    };
  }
  
  // Chuyển đổi màu
  const buttonColor = hsbToRgb(
    quoteConfig.buttonColor.hue,
    quoteConfig.buttonColor.saturation,
    quoteConfig.buttonColor.brightness
  );
  
  const textColor = hsbToRgb(
    quoteConfig.textColor.hue,
    quoteConfig.textColor.saturation,
    quoteConfig.textColor.brightness
  );
  
  // Tạo CSS cho button
  const buttonStyle = `
    background-color: rgb(${buttonColor.r}, ${buttonColor.g}, ${buttonColor.b});
    color: rgb(${textColor.r}, ${textColor.g}, ${textColor.b});
    font-size: ${quoteConfig.fontSize}px;
    border-radius: ${quoteConfig.cornerRadius}px;
    border: none;
    padding: 12px 24px;
    cursor: pointer;
    font-weight: 600;
    text-decoration: none;
    display: inline-block;
    transition: opacity 0.3s ease;
    margin: 10px 0;
  `;
  
  // Tạo HTML cho quote button
  const quoteButtonHtml = `
    <div class="quote-button-container" style="text-align: ${quoteConfig.alignment}; margin: 15px 0;">
      <button 
        class="quote-request-button" 
        style="${buttonStyle}"
        onmouseover="this.style.opacity='0.8'" 
        onmouseout="this.style.opacity='1'"
        onclick="handleQuoteRequest()"
      >
        ${quoteConfig.buttonLabel || '{{ "quote.button.label" | t }}'}
      </button>
    </div>
  `;
  
  // Hàm xử lý khi click quote button
  window.handleQuoteRequest = function() {
    // Lấy thông tin sản phẩm
    const productData = {
      id: {{ product.id | json }},
      title: {{ product.title | json }},
      handle: {{ product.handle | json }},
      price: {{ product.price | json }},
      compare_at_price: {{ product.compare_at_price | json }},
      vendor: {{ product.vendor | json }},
      type: {{ product.type | json }},
      url: window.location.href,
      image: {{ product.featured_image | image_url: width: 300, height: 300 | json }}
    };
    
    // Gọi API hoặc mở modal quote
    console.log('Quote requested for product:', productData);
    
    // Có thể redirect đến trang quote hoặc mở modal
    // window.location.href = `/pages/quote?product=${productData.id}`;
    
    // Hoặc trigger custom event
    const quoteEvent = new CustomEvent('quoteRequested', {
      detail: { product: productData, config: quoteConfig }
    });
    document.dispatchEvent(quoteEvent);
    
    alert('{{ "quote.request.success" | t }}');
  };
  
  // Tìm vị trí chèn button
  let targetElement = null;
  
  if (quoteConfig.position === 'under-button') {
    // Tìm nút Add to Cart và chèn sau nó
    targetElement = document.querySelector('button[name="add"], [data-testid="add-to-cart"], .btn-product-add, form[action*="/cart/add"] button[type="submit"]');
    if (targetElement) {
      targetElement.parentNode.insertAdjacentHTML('afterend', quoteButtonHtml);
    }
  } else if (quoteConfig.position === 'above-button') {
    // Chèn trước nút Add to Cart
    targetElement = document.querySelector('button[name="add"], [data-testid="add-to-cart"], .btn-product-add, form[action*="/cart/add"] button[type="submit"]');
    if (targetElement) {
      targetElement.parentNode.insertAdjacentHTML('beforebegin', quoteButtonHtml);
    }
  } else if (quoteConfig.position === 'replace-button') {
    // Thay thế nút Add to Cart
    targetElement = document.querySelector('button[name="add"], [data-testid="add-to-cart"], .btn-product-add, form[action*="/cart/add"] button[type="submit"]');
    if (targetElement) {
      targetElement.style.display = 'none';
      targetElement.parentNode.insertAdjacentHTML('afterend', quoteButtonHtml);
    }
  }
  
  // Nếu không tìm thấy Add to Cart button, chèn vào cuối product form
  if (!targetElement) {
    const productForm = document.querySelector('form[action*="/cart/add"], .product-form');
    if (productForm) {
      productForm.insertAdjacentHTML('beforeend', quoteButtonHtml);
    }
  }
});
</script>

{% schema %}
{
  "name": "Quote Button",
  "target": "head",
  "templates": ["product"],
  "settings": [
    {
      "type": "paragraph",
      "content": "This block automatically displays a quote button based on the quote_snap metafield configuration. The button appearance and behavior are controlled by the metafield data."
    },
    {
      "type": "checkbox",
      "id": "enable_debug",
      "label": "Enable Debug Mode",
      "default": false,
      "info": "Show console logs for debugging"
    }
  ]
}
{% endschema %}
